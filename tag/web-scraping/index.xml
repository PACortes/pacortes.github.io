<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web scraping | Pablo Cortes</title>
    <link>https://academic-demo.netlify.app/tag/web-scraping/</link>
      <atom:link href="https://academic-demo.netlify.app/tag/web-scraping/index.xml" rel="self" type="application/rss+xml" />
    <description>Web scraping</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 20 Sep 2021 21:13:14 -0500</lastBuildDate>
    <image>
      <url>https://academic-demo.netlify.app/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>Web scraping</title>
      <link>https://academic-demo.netlify.app/tag/web-scraping/</link>
    </image>
    
    <item>
      <title>Instalando rvest</title>
      <link>https://academic-demo.netlify.app/courses/rvest/00instalar/</link>
      <pubDate>Mon, 20 Sep 2021 21:13:14 -0500</pubDate>
      <guid>https://academic-demo.netlify.app/courses/rvest/00instalar/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#instalando-y-cargando-rvest&#34;&gt;1. Instalando y cargando &lt;code&gt;rvest&lt;/code&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#desde-el-cran&#34;&gt;1.1. Desde el CRAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#desde-github&#34;&gt;1.1. Desde GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#no-olvidemos-que-siempre-debemos-cargar-el-paquete-antes-de-usarlo&#34;&gt;No olvidemos que siempre debemos cargar el paquete antes de usarlo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#funciones-básicas-en-rvest&#34;&gt;2 Funciones básicas en &lt;code&gt;rvest&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;instalando-y-cargando-rvest&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;1. Instalando y cargando &lt;code&gt;rvest&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Para instalar el paquete, tenemos dos posibles caminos:&lt;/p&gt;
&lt;div id=&#34;desde-el-cran&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.1. Desde el CRAN&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;rvest&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;desde-github&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.1. Desde GitHub&lt;/h2&gt;
&lt;p&gt;Para este camino, debemos tener instalado el paquete &lt;code&gt;devtools&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;devtools&amp;quot;)
#devtools::install_github(&amp;quot;tidyverse/rvest&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;no-olvidemos-que-siempre-debemos-cargar-el-paquete-antes-de-usarlo&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;No olvidemos que siempre debemos cargar el paquete antes de usarlo&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rvest)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;funciones-básicas-en-rvest&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;2 Funciones básicas en &lt;code&gt;rvest&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;A continuación se listan las funciones más importantes y sus respectivas descripciones.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;read_html()&lt;/code&gt;: crea un objeto que contiene todo el código o etiquetas HTML.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;html_nodes()&lt;/code&gt;: selecciona partes del objeto que contiene todo el código html.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;html_elements()&lt;/code&gt;: devuelve un conjunto de nodos específicos.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;html_name()&lt;/code&gt;: obtiene los atributos html.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;html_text()&lt;/code&gt;: extrae el texto html, sin procesar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;html_text2()&lt;/code&gt;: extrae el texto html, procesa el texto.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;html_attr()&lt;/code&gt;: regresa los atributos específicos html.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;html_attrs()&lt;/code&gt;: obtiene los atributos html.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;html_chilren()&lt;/code&gt;: obtiene atributos hijos.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;html_table()&lt;/code&gt;: convierte una tabla html en una estructura de datos en R.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;minimal_html()&lt;/code&gt;: genera una pagina html mínima.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
