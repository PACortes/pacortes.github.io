<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Pablo Cortes</title>
    <link>https://academic-demo.netlify.app/tag/r/</link>
      <atom:link href="https://academic-demo.netlify.app/tag/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 05 Oct 2021 21:13:14 -0500</lastBuildDate>
    <image>
      <url>https://academic-demo.netlify.app/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>R</title>
      <link>https://academic-demo.netlify.app/tag/r/</link>
    </image>
    
    <item>
      <title>Introducción a RStudio</title>
      <link>https://academic-demo.netlify.app/docencia/mmad109/sesion01_1/</link>
      <pubDate>Tue, 05 Oct 2021 21:13:14 -0500</pubDate>
      <guid>https://academic-demo.netlify.app/docencia/mmad109/sesion01_1/</guid>
      <description>
&lt;script src=&#34;https://academic-demo.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#instalación-de-rstudio&#34;&gt;1. Instalación de &lt;code&gt;RStudio&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#entorno-de-trabajo-de-rstudio&#34;&gt;2. Entorno de trabajo de &lt;code&gt;RStudio&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#script&#34;&gt;2.2. Script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ambiente-historial-conecciones-y-tutorial&#34;&gt;2.3. Ambiente, Historial, Conecciones y Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#archivos-visualizaciones-paquetes-y-ayuda&#34;&gt;2.4. Archivos, Visualizaciones, Paquetes y Ayuda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interactuando-con-rstudio&#34;&gt;3. Interactuando con &lt;code&gt;RStudio&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sintáxis&#34;&gt;5. Sintáxis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;Recordemos que &lt;code&gt;RStudio&lt;/code&gt; no es &lt;code&gt;R&lt;/code&gt;. Es un programa que ejecuta &lt;code&gt;R&lt;/code&gt; y proporciona herramientas adicionales que son útiles al escribir código &lt;code&gt;R&lt;/code&gt;, algo así como su sistema operativo puede ejecutar un navegador web.&lt;/p&gt;
&lt;p&gt;Este taller asumirá que estamos utilizando &lt;code&gt;RStudio&lt;/code&gt; para interactuar con &lt;code&gt;R&lt;/code&gt;, aunque todo lo que veremos se puede hacer directament en &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;instalación-de-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;1. Instalación de &lt;code&gt;RStudio&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;RStudio&lt;/code&gt; es gratuito y de código abierto. Haz clic &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;aquí&lt;/a&gt; para descargar la versión que corresponda a tu sitema operativo.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RStudio&lt;/code&gt; requiere la instalación de &lt;code&gt;R&lt;/code&gt; (versión 3.0.1 o superior). Para descargar &lt;code&gt;R&lt;/code&gt;, haz clic &lt;a href=&#34;https://cran.r-project.org/bin/windows/base/&#34;&gt;aquí&lt;/a&gt; si tu sistema operativo es Windows, y &lt;a href=&#34;https://cran.r-project.org/bin/macosx/&#34;&gt;aquí&lt;/a&gt; en caso de que sea macOS.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;entorno-de-trabajo-de-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;2. Entorno de trabajo de &lt;code&gt;RStudio&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Cuando abras RStudio, notarás una ventana con cuatro paneles principales, cada uno con algunas pestañas.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rstuidio.png&#34; style=&#34;width:100.0%;height:100.0%&#34; alt=&#34;hola&#34; /&gt;
## 2.1. Consola
En el panel inferior izquierdo, encontraremos la consola de &lt;code&gt;RStudio&lt;/code&gt;. Es aquí donde podemos escribir las lineas de comando para interactuar con &lt;code&gt;R&lt;/code&gt;, y en donde nuestro código es interpretado. La consola es la única parte de &lt;code&gt;RStudio&lt;/code&gt; que en realidad es &lt;code&gt;R&lt;/code&gt;; todo lo demás son herramientas opcionales.&lt;/p&gt;
&lt;div id=&#34;script&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.2. Script&lt;/h2&gt;
&lt;p&gt;En el panel superior izquierdo, encontraremos el script, editor de texto con la extensión de archivo &lt;em&gt;.R&lt;/em&gt; que puede ser leido por &lt;code&gt;R&lt;/code&gt;. En el script escribiremos comandos que serán ejecutados en la consola. Además, en el script podemos agregar comentarios. Para ello, la(s) línea(s) de texto debe(n) estar precedidas por el el símbolo &lt;em&gt;#&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Para guardar el script:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;File &amp;gt; Save as&lt;/em&gt; y seleccionar la ruta donde se quiere guardar el archivo con la extensión &lt;em&gt;.R&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Hacer clic en el botón &lt;em&gt;Guardar&lt;/em&gt; que se encuentra en la parte izquierda de la cinta de opciones del script.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;ambiente-historial-conecciones-y-tutorial&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.3. Ambiente, Historial, Conecciones y Tutorial&lt;/h2&gt;
&lt;p&gt;En el panel superior derecho, encontraremos cuatro pestañas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Environment&lt;/strong&gt;: En el ambiente de trabajo se irán registrando el trabajo realizado (resultados, variables, gráficos, etc.) durante una determinada sesión. También tenemos la opción de cargar y guardar una sesión de trabajo, importar datos y limpiar los objetos de la sesión.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;History&lt;/strong&gt;: En el hisotrial se registran las instrucciones ejecutadas. Como opciones, podemos cargar y guardar el historial de la sesión, seleccionar una o más instrucciones y enviarlas a la consola o al script, además de poder limpiar el historial.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connections&lt;/strong&gt;: En conecciones, puedes conectar &lt;code&gt;RStudio&lt;/code&gt; a diferentes fuentes de datos. Por ejemplo ODBC, Spark, Oracle, SQLServer, entre otras.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tutorial&lt;/strong&gt;: Aquí encontraremos ayuda usando el paquete &lt;code&gt;learnr&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;archivos-visualizaciones-paquetes-y-ayuda&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.4. Archivos, Visualizaciones, Paquetes y Ayuda&lt;/h2&gt;
&lt;p&gt;En el panel inferior derecho, encontraremos cuatro pestañas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Files&lt;/strong&gt;: En la pestaña archivos podemos ver el historial de archivos trabajados.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plots&lt;/strong&gt;: Aquí se visualizan los gráficos que generamos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Packages&lt;/strong&gt;: Entrega un listado de los paquetes instalados en &lt;code&gt;R&lt;/code&gt; y los que han sido cargados en la sesión. A través de las opciones de esta pestaña podemos instalar nuevos paquetes o actualizar los existentes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt;: Permite acceder al CRAN (siempre que se cuente con conexión a Internet), página oficial del software que ofrece diferentes recursos para el programa: información general, de los paquetes instalados, de funciones de interés, entre otros.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Es importante señalar que podemos reorganizar los paneles en &lt;em&gt;Ver -&amp;gt; Paneles -&amp;gt; Diseño de panel&lt;/em&gt;. Además. podemos agregar y eliminar pestañas de los paneles en &lt;em&gt;Ver&lt;/em&gt; y seleccionando o deseleccionando las opciones de pestañas que se enumeran en la parte inferior.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;interactuando-con-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;3. Interactuando con &lt;code&gt;RStudio&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Interactuar con &lt;code&gt;RStudio&lt;/code&gt; es simple. Básicamente, debemos escribir el código &lt;code&gt;R&lt;/code&gt; en la línea inferior de la consola y luego haga clic en &lt;em&gt;Enter&lt;/em&gt; para ejecutarlo. También podemos enviar código desde el &lt;em&gt;script&lt;/em&gt;, presionando &lt;em&gt;&amp;lt;Ctrl + R&amp;gt;&lt;/em&gt; (Windows) o &lt;em&gt;&amp;lt;Ctrl +Enter&amp;gt;&lt;/em&gt; (Mac).&lt;/p&gt;
&lt;p&gt;El código que escribimos se llama comando, porque dará la orden a nuestro computador que haga algo por nosotros. La línea en la que escribimos se llama línea de comando.&lt;/p&gt;
&lt;p&gt;Cuando escribimos un comando en el prompt &lt;em&gt;&amp;gt;&lt;/em&gt; y presionamos &lt;em&gt;Enter&lt;/em&gt;, o lo enviamos desde el &lt;em&gt;script&lt;/em&gt;, &lt;code&gt;R&lt;/code&gt; ejecutará el comando y nos mostará los resultados en la consola. Junto a nuestros resultados, aparecerá &lt;em&gt;[1]&lt;/em&gt;, informando que en esta línea comienza con el primer valor del resultado. Luego, RStudio muestra un nuevo &lt;em&gt;&amp;gt;&lt;/em&gt; para su próximo comando.&lt;/p&gt;
&lt;p&gt;Es importante tener en cuenta que:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cuando la consola muestra el prompt &lt;em&gt;&amp;gt;&lt;/em&gt;, significa que podemos dar nuevos comandos para ejecutar.&lt;/li&gt;
&lt;li&gt;Si escribimos un comando incompleto y presionamos &lt;em&gt;Enter&lt;/em&gt;, la consola mostrará un indicador &lt;em&gt;+&lt;/em&gt;, lo que significa que está esperando que escribamos el resto del comando.&lt;/li&gt;
&lt;li&gt;Si escribimos un comando que R no reconoce, R devolverá un mensaje de error. Esto no es para alarmarno. R simplemente nos está diciendo que no puede entender o hacer lo que le pedimos. El texto en rojo nos avisa y explica, los errores en la solicitud realizada.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;sintáxis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;5. Sintáxis&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; es un lenguaje de programación. Tanto en &lt;code&gt;R&lt;/code&gt;, así como de la interfaz &lt;code&gt;RStudio&lt;/code&gt;, podemos interactuará con el programa mediante códigos. La sintaxis es un conjunto de códigos. Su uso en &lt;code&gt;R&lt;/code&gt; y &lt;code&gt;RStudio&lt;/code&gt; es bastante intuitivo y sigue un patrón lógico.&lt;/p&gt;
&lt;p&gt;De modo general, la sintáxis de &lt;code&gt;R&lt;/code&gt; sigue la siguiente estructura básica:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;comando(objeto)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En donde:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;comandos&lt;/code&gt;: función a ejecutar a un objeto.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;objeto&lt;/code&gt;: estructura de datos que tiene algunos atributos y métodos que actúan sobre sus atributos.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Este ejemplo es una operación simple. Al aumentar la complejidad de los análisis la especificación de los comandos y los objetos irá requiriendo una mayor cantidad de información.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Datos en RStudio</title>
      <link>https://academic-demo.netlify.app/docencia/mmad109/sesion01_2/</link>
      <pubDate>Tue, 05 Oct 2021 21:13:14 -0500</pubDate>
      <guid>https://academic-demo.netlify.app/docencia/mmad109/sesion01_2/</guid>
      <description>
&lt;script src=&#34;https://academic-demo.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tipos-de-datos-en-r&#34;&gt;1. Tipos de datos en R&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#numérico&#34;&gt;1.1. Numérico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cadena-de-texto&#34;&gt;1.2. Cadena de texto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#factor&#34;&gt;1.3. Factor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lógico&#34;&gt;1.4. Lógico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#perdido-na-y-vacío-null&#34;&gt;1.5.Perdido (NA) y Vacío (NULL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#verificando-el-tipo-de-dato&#34;&gt;1.6. Verificando el tipo de dato&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#operadores&#34;&gt;2. Operadores&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#aritméticos&#34;&gt;2.1. Aritméticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#relacionales&#34;&gt;2.2. Relacionales&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lógicos&#34;&gt;2.3. Lógicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asignación&#34;&gt;2.4. Asignación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#concatenación&#34;&gt;2.5. Concatenación&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#estructura-de-datos-en-r&#34;&gt;3. Estructura de datos en R&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#vector&#34;&gt;Vector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;tipos-de-datos-en-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;1. Tipos de datos en R&lt;/h1&gt;
&lt;p&gt;Los tipos de datos de uso más común en R son:&lt;/p&gt;
&lt;div id=&#34;numérico&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.1. Numérico&lt;/h2&gt;
&lt;p&gt;Representan números que tienen una parte decimal o fraccionaria.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;5
## [1] 5

25.3
## [1] 25.3

123890.85544
## [1] 123890.9&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;cadena-de-texto&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.2. Cadena de texto&lt;/h2&gt;
&lt;p&gt;Secuencias de caracteres. Puede contener letras, números, espacios, signos de puntuación y símbolos especiales.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;quot;a&amp;quot;
## [1] &amp;quot;a&amp;quot;

&amp;quot;a&amp;quot;
## [1] &amp;quot;a&amp;quot;

&amp;quot;Contaminacion&amp;quot;
## [1] &amp;quot;Contaminacion&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;factor&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.3. Factor&lt;/h2&gt;
&lt;p&gt;Dato numérico representado por una etiqueta.&lt;/p&gt;
&lt;p&gt;Por último, cada una de las etiquetas o valores que puedes asumir un factor se conoce como nivel. En nuestro ejemplo con femenino y masculino, tendríamos dos niveles.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lógico&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.4. Lógico&lt;/h2&gt;
&lt;p&gt;Sólo tienen dos valores posibles: verdadero (TRUE) y falso (FALSE). Representan si una condición o estado se cumple, es verdadero, o no, es falso.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;perdido-na-y-vacío-null&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.5.Perdido (NA) y Vacío (NULL)&lt;/h2&gt;
&lt;p&gt;En R, usamos NA para representar datos perdidos, mientras que NULL representa la ausencia de datos. La diferencia entre las dos es que un dato NULL aparece sólo cuando R intenta recuperar un dato y no encuentra nada, mientras que NA es usado para representar explícitamente datos perdidos, omitidos o que por alguna razón son faltantes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;verificando-el-tipo-de-dato&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.6. Verificando el tipo de dato&lt;/h2&gt;
&lt;p&gt;Podemos verificar si un dato es de un tipo específico con la familia de funciones &lt;code&gt;is()&lt;/code&gt;. Estas funciones toman como argumento un dato, si este es del tipo que estamos verificando, nos devolverán TRUE y en caso contrario devolverán FALSE&lt;/p&gt;
&lt;div id=&#34;qwqthdhcab&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#qwqthdhcab .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#qwqthdhcab .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qwqthdhcab .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#qwqthdhcab .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#qwqthdhcab .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qwqthdhcab .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#qwqthdhcab .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#qwqthdhcab .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#qwqthdhcab .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#qwqthdhcab .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#qwqthdhcab .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#qwqthdhcab .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#qwqthdhcab .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#qwqthdhcab .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#qwqthdhcab .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#qwqthdhcab .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#qwqthdhcab .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#qwqthdhcab .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qwqthdhcab .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#qwqthdhcab .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#qwqthdhcab .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#qwqthdhcab .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#qwqthdhcab .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#qwqthdhcab .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qwqthdhcab .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#qwqthdhcab .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#qwqthdhcab .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#qwqthdhcab .gt_left {
  text-align: left;
}

#qwqthdhcab .gt_center {
  text-align: center;
}

#qwqthdhcab .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#qwqthdhcab .gt_font_normal {
  font-weight: normal;
}

#qwqthdhcab .gt_font_bold {
  font-weight: bold;
}

#qwqthdhcab .gt_font_italic {
  font-style: italic;
}

#qwqthdhcab .gt_super {
  font-size: 65%;
}

#qwqthdhcab .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Función&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Tipo de dato&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.integer()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Entero&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.numeric&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Numérico&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.character()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Cadena de texto&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.factor()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Factor&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.logical()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Lógico&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.na()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;NA&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.null()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;NULL&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;operadores&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;2. Operadores&lt;/h1&gt;
&lt;p&gt;Los operadores son símbolos que le indican a &lt;code&gt;R&lt;/code&gt; que debe realizar una determinada tarea.&lt;/p&gt;
&lt;p&gt;Existen operadores específicos para cada tipo de tarea. Los tipos de operadores principales, y específicos para cada tarea, son los siguientes:&lt;/p&gt;
&lt;div id=&#34;aritméticos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.1. Aritméticos&lt;/h2&gt;
&lt;p&gt;Este tipo de operador lo usarmeos para operaciones aritméticas.&lt;/p&gt;
&lt;div id=&#34;cbpizptnbh&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#cbpizptnbh .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#cbpizptnbh .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cbpizptnbh .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#cbpizptnbh .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#cbpizptnbh .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cbpizptnbh .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#cbpizptnbh .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#cbpizptnbh .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#cbpizptnbh .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#cbpizptnbh .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#cbpizptnbh .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#cbpizptnbh .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#cbpizptnbh .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#cbpizptnbh .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#cbpizptnbh .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#cbpizptnbh .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#cbpizptnbh .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#cbpizptnbh .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cbpizptnbh .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#cbpizptnbh .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#cbpizptnbh .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#cbpizptnbh .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#cbpizptnbh .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#cbpizptnbh .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cbpizptnbh .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#cbpizptnbh .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#cbpizptnbh .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#cbpizptnbh .gt_left {
  text-align: left;
}

#cbpizptnbh .gt_center {
  text-align: center;
}

#cbpizptnbh .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#cbpizptnbh .gt_font_normal {
  font-weight: normal;
}

#cbpizptnbh .gt_font_bold {
  font-weight: bold;
}

#cbpizptnbh .gt_font_italic {
  font-style: italic;
}

#cbpizptnbh .gt_super {
  font-size: 65%;
}

#cbpizptnbh .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operador&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operación&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Ejemplo&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Resultado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;+&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Suma&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;1 + 1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;-&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Resta&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 - 1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;*&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Multiplicación&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 * 5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;1O&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;/&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;División&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;10 / 3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;3.333333&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;^&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Potencia&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 ^ 3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;8&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;relacionales&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.2. Relacionales&lt;/h2&gt;
&lt;p&gt;Los operadores lógicos nos permitirán hacer comparaciones y siempre obtendremos como resultado &lt;em&gt;TRUE&lt;/em&gt; o &lt;em&gt;FALSE&lt;/em&gt; (verdadero o falso, respectivamente).&lt;/p&gt;
&lt;div id=&#34;fbjpzwwfrm&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#fbjpzwwfrm .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#fbjpzwwfrm .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#fbjpzwwfrm .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#fbjpzwwfrm .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#fbjpzwwfrm .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fbjpzwwfrm .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#fbjpzwwfrm .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#fbjpzwwfrm .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#fbjpzwwfrm .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#fbjpzwwfrm .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#fbjpzwwfrm .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#fbjpzwwfrm .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#fbjpzwwfrm .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#fbjpzwwfrm .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#fbjpzwwfrm .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#fbjpzwwfrm .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#fbjpzwwfrm .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#fbjpzwwfrm .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#fbjpzwwfrm .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#fbjpzwwfrm .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#fbjpzwwfrm .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#fbjpzwwfrm .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#fbjpzwwfrm .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fbjpzwwfrm .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#fbjpzwwfrm .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#fbjpzwwfrm .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#fbjpzwwfrm .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#fbjpzwwfrm .gt_left {
  text-align: left;
}

#fbjpzwwfrm .gt_center {
  text-align: center;
}

#fbjpzwwfrm .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#fbjpzwwfrm .gt_font_normal {
  font-weight: normal;
}

#fbjpzwwfrm .gt_font_bold {
  font-weight: bold;
}

#fbjpzwwfrm .gt_font_italic {
  font-style: italic;
}

#fbjpzwwfrm .gt_super {
  font-size: 65%;
}

#fbjpzwwfrm .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operador&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operación&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Ejemplo&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Resultado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Menor que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;1 &amp;lt; 2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;TRUE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt;=&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Menor o igual que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt; 2 &amp;lt;= 2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;TRUE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Mayor que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;3 &amp;gt; 2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;FALSE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;gt;=&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Mayor o igual que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;5 &amp;gt;= 6&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;FALSE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;==&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Exactamente igual que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 == 2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;TRUE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;!=&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;No es igual que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 != 3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;TRUE&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Al usar los operadores &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt; y &lt;code&gt;&amp;lt;=&lt;/code&gt; con cadenas de texto, su comportamiento será diferente.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;quot;dos&amp;quot; &amp;lt; &amp;quot;tres&amp;quot;
## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Este resultado se debe a que se ha hecho una comparación por orden alfabético. En este caso, la palabra “dos” tiene una posición anterior a “tres”, pues empieza con “d” y esta letra tiene una posición anterior a la “t” en el alfabeto. Por lo tanto, es verdadero que &lt;em&gt;dos&lt;/em&gt;sea menor que &lt;em&gt;tres&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lógicos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.3. Lógicos&lt;/h2&gt;
&lt;p&gt;Este tipo de operador lo usarmeos para operaciones de álgebra Booleana, es decir, para describir relaciones lógicas, expresadas como verdadero (&lt;em&gt;TRUE&lt;/em&gt;) o falso (&lt;em&gt;FALSE&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Estos operadores pueden ser usados con estos con datos de tipo numérico, lógico y complejo. Al igual que con los operadores relacionales, los operadores lógicos siempre dan como resultado &lt;em&gt;TRUE&lt;/em&gt; o &lt;em&gt;FALSE&lt;/em&gt; (verdadero o falso, respectivamente).&lt;/p&gt;
&lt;div id=&#34;pogubibruq&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#pogubibruq .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#pogubibruq .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pogubibruq .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#pogubibruq .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#pogubibruq .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pogubibruq .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#pogubibruq .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#pogubibruq .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#pogubibruq .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#pogubibruq .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#pogubibruq .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#pogubibruq .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#pogubibruq .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#pogubibruq .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#pogubibruq .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#pogubibruq .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#pogubibruq .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#pogubibruq .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pogubibruq .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#pogubibruq .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#pogubibruq .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#pogubibruq .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#pogubibruq .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#pogubibruq .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pogubibruq .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#pogubibruq .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#pogubibruq .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#pogubibruq .gt_left {
  text-align: left;
}

#pogubibruq .gt_center {
  text-align: center;
}

#pogubibruq .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#pogubibruq .gt_font_normal {
  font-weight: normal;
}

#pogubibruq .gt_font_bold {
  font-weight: bold;
}

#pogubibruq .gt_font_italic {
  font-style: italic;
}

#pogubibruq .gt_super {
  font-size: 65%;
}

#pogubibruq .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operador&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Comparación&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;x | y&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;x o y son verdaderos&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;x &amp;amp; y&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;x e y son verdaderos&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;!x&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;x no es verdadero (negación)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;isTRUE(x)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;x es verdadero (afirmación)&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Los operadores &lt;code&gt;|&lt;/code&gt; e &lt;code&gt;&amp;amp;&lt;/code&gt; siguen estas reglas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; devuelve &lt;em&gt;TRUE&lt;/em&gt; si alguno de los datos es &lt;em&gt;TRUE&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; solo devuelve &lt;em&gt;TRUE&lt;/em&gt; si ambos datos es &lt;em&gt;TRUE&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; solo devuelve &lt;em&gt;FALSE&lt;/em&gt; si ambos datos son &lt;em&gt;FALSE&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; devuelve &lt;em&gt;FALSE&lt;/em&gt; si alguno de los datos es &lt;em&gt;FALSE&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;asignación&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.4. Asignación&lt;/h2&gt;
&lt;p&gt;Nos permite asignar datos a objetos.&lt;/p&gt;
&lt;div id=&#34;gfsvxhtisu&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#gfsvxhtisu .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#gfsvxhtisu .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gfsvxhtisu .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#gfsvxhtisu .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#gfsvxhtisu .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gfsvxhtisu .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#gfsvxhtisu .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#gfsvxhtisu .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#gfsvxhtisu .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#gfsvxhtisu .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#gfsvxhtisu .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#gfsvxhtisu .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#gfsvxhtisu .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#gfsvxhtisu .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#gfsvxhtisu .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#gfsvxhtisu .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#gfsvxhtisu .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#gfsvxhtisu .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gfsvxhtisu .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#gfsvxhtisu .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#gfsvxhtisu .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#gfsvxhtisu .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#gfsvxhtisu .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#gfsvxhtisu .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gfsvxhtisu .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#gfsvxhtisu .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#gfsvxhtisu .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#gfsvxhtisu .gt_left {
  text-align: left;
}

#gfsvxhtisu .gt_center {
  text-align: center;
}

#gfsvxhtisu .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#gfsvxhtisu .gt_font_normal {
  font-weight: normal;
}

#gfsvxhtisu .gt_font_bold {
  font-weight: bold;
}

#gfsvxhtisu .gt_font_italic {
  font-style: italic;
}

#gfsvxhtisu .gt_super {
  font-size: 65%;
}

#gfsvxhtisu .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operador&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operación&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt;-&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Asigna un valor a un objeto&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;=&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Asigna un valor a un objeto&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dos&amp;lt;-2

dos
## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;letra&amp;lt;-&amp;quot;a&amp;quot;

letra
## [1] &amp;quot;a&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Es importante tener en cuenta que:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Si asignamos un datos a un objeto al que ya habíamos asignado datos, nuestro objeto conserva los datos más recientes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Esta operación nos permite “guardar” el resultado de operaciones, de modo que podemos recuperarlos sin necesidad de realizar las operaciones otra vez (Revisar &lt;em&gt;Environment&lt;/em&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A lo largo del taller utilizaremos &lt;code&gt;&amp;lt;-&lt;/code&gt; por ser característico de R y fácil de reconocer visualmente.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;concatenación&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.5. Concatenación&lt;/h2&gt;
&lt;p&gt;Este operador es una función (&lt;code&gt;c()&lt;/code&gt;) que nos permite combinar dos o más valores en un solo objeto.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dos_digitos&amp;lt;-c(15, 2)

dos_digitos
## [1] 15  2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;estructura-de-datos-en-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;3. Estructura de datos en R&lt;/h1&gt;
&lt;div id=&#34;vector&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Vector&lt;/h2&gt;
&lt;p&gt;Colección de uno o más datos del mismo tipo.&lt;/p&gt;
&lt;p&gt;Propiedades de los vectores:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tipo&lt;/strong&gt;: Un vector tiene el mismo tipo que los datos que contiene.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Largo&lt;/strong&gt;: Es el número de elementos que contiene un vector.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para crear un vector, podemos usar el operador de concatenación &lt;code&gt;c()&lt;/code&gt;. Llamamos esta función y le damos como argumento los elementos que deseamos combinar en un vector, separados por comas.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;c(15, 2, 3.3, 5, 8)
## [1] 15.0  2.0  3.3  5.0  8.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_numerico&amp;lt;-c(15, 2, 3.3, 5, 8)

vector_numerico
## [1] 15.0  2.0  3.3  5.0  8.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si deseamos agregar un elemento a un vector ya existente, podemos hacerlo combinando nuestro vector original con los elementos nuevos y asignando el resultado a nuestro vector original.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_numerico&amp;lt;-c(15, 2, 3.3, 5, 8)

vector_numerico &amp;lt;-c(vector_numerico,1200)

vector_numerico
## [1]   15.0    2.0    3.3    5.0    8.0 1200.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;También podemos crear vectores que son combinaciones de vectores.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_numerico_1&amp;lt;-c(15, 2, 3.3)

vector_numerico_2&amp;lt;-c(25, 9, 0.6)

vector_numerico &amp;lt;-c (vector_numerico_1,vector_numerico_2)

vector_numerico
## [1] 15.0  2.0  3.3 25.0  9.0  0.6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos crear vectores de &lt;strong&gt;secuencias numéricas&lt;/strong&gt; usando &lt;code&gt;:&lt;/code&gt;. De un lado de los dos puntos escribimos el número de inicio de la secuencia y del otro el final.&lt;/p&gt;
&lt;p&gt;Las secuencias creadas son consecutivas con incrementos o decrementos de 1. Estas secuencias pueden empezar con cualquier número, incluso si este es negativo o tiene cifras decimales.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;1:50
##  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
## [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_secuencia&amp;lt;- 1:50

vector_secuencia
##  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
## [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Otra opción para generar vectores es la función &lt;code&gt;rep(x,times)&lt;/code&gt;, la cual repite los elementos en &lt;code&gt;x&lt;/code&gt;un número determinado de veces (&lt;code&gt;times&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(1:5,2)
##  [1] 1 2 3 4 5 1 2 3 4 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora, si usamos el argumento &lt;code&gt;each&lt;/code&gt;, primero se replicará el elemento y luego se repetirá el número de veces definida por nosotros.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(1:5, each=2)
##  [1] 1 1 2 2 3 3 4 4 5 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El argumento &lt;code&gt;len&lt;/code&gt; sirve para definir el número de elementos que debe contener el resultado.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(1:5,each=2, len =4)
## [1] 1 1 2 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El argumento &lt;code&gt;len&lt;/code&gt; sirve para definir el número de veces que queremos repetir el vector de interés.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(1:5,each=2, times =3)
##  [1] 1 1 2 2 3 3 4 4 5 5 1 1 2 2 3 3 4 4 5 5 1 1 2 2 3 3 4 4 5 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora, exploremos generemos repeticiones pero esta vez con vectores de cadenas de texto.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(LETTERS[1:5],4)
##  [1] &amp;quot;A&amp;quot; &amp;quot;B&amp;quot; &amp;quot;C&amp;quot; &amp;quot;D&amp;quot; &amp;quot;E&amp;quot; &amp;quot;A&amp;quot; &amp;quot;B&amp;quot; &amp;quot;C&amp;quot; &amp;quot;D&amp;quot; &amp;quot;E&amp;quot; &amp;quot;A&amp;quot; &amp;quot;B&amp;quot; &amp;quot;C&amp;quot; &amp;quot;D&amp;quot; &amp;quot;E&amp;quot; &amp;quot;A&amp;quot; &amp;quot;B&amp;quot; &amp;quot;C&amp;quot; &amp;quot;D&amp;quot;
## [20] &amp;quot;E&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(&amp;quot;Santiago&amp;quot;,4)
## [1] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(c(&amp;quot;Santiago&amp;quot;,&amp;quot;Valdivia&amp;quot;),4)
## [1] &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot;
## [8] &amp;quot;Valdivia&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(c(&amp;quot;Santiago&amp;quot;,&amp;quot;Valdivia&amp;quot;),4,each=2)
##  [1] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot;
##  [7] &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot;
## [13] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(c(&amp;quot;Santiago&amp;quot;,&amp;quot;Valdivia&amp;quot;),each=5)
##  [1] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot;
##  [7] &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Ciudad&amp;lt;-c(&amp;quot;Santiago&amp;quot;,&amp;quot;Valdivia&amp;quot;)
Ciudad&amp;lt;-rep(Ciudad,each=5)
Ciudad
##  [1] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot;
##  [7] &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
