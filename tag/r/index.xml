<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Pablo Cortes</title>
    <link>https://academic-demo.netlify.app/tag/r/</link>
      <atom:link href="https://academic-demo.netlify.app/tag/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 05 Oct 2021 21:13:14 -0500</lastBuildDate>
    <image>
      <url>https://academic-demo.netlify.app/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>R</title>
      <link>https://academic-demo.netlify.app/tag/r/</link>
    </image>
    
    <item>
      <title>Introducción a RStudio</title>
      <link>https://academic-demo.netlify.app/docencia/mmad109/sesion01_1/</link>
      <pubDate>Tue, 05 Oct 2021 21:13:14 -0500</pubDate>
      <guid>https://academic-demo.netlify.app/docencia/mmad109/sesion01_1/</guid>
      <description>
&lt;script src=&#34;https://academic-demo.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#instalación-de-rstudio&#34;&gt;1. Instalación de &lt;code&gt;RStudio&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#entorno-de-trabajo-de-rstudio&#34;&gt;2. Entorno de trabajo de &lt;code&gt;RStudio&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#consola&#34;&gt;2.1. Consola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#script&#34;&gt;2.2. Script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ambiente-historial-conexiones-y-tutorial&#34;&gt;2.3. Ambiente, Historial, Conexiones y Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#archivos-visualizaciones-paquetes-y-ayuda&#34;&gt;2.4. Archivos, Visualizaciones, Paquetes y Ayuda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#interactuando-con-rstudio&#34;&gt;3. Interactuando con &lt;code&gt;RStudio&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sintáxis&#34;&gt;5. Sintáxis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;Recordemos que &lt;code&gt;RStudio&lt;/code&gt; no es &lt;code&gt;R&lt;/code&gt;. Es un programa que ejecuta &lt;code&gt;R&lt;/code&gt; y proporciona herramientas adicionales que son útiles al escribir código &lt;code&gt;R&lt;/code&gt;, algo así como su sistema operativo puede ejecutar un navegador web.&lt;/p&gt;
&lt;p&gt;Este taller asumirá que estamos utilizando &lt;code&gt;RStudio&lt;/code&gt; para interactuar con &lt;code&gt;R&lt;/code&gt;, aunque todo lo que veremos se puede hacer directament en &lt;code&gt;R&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;instalación-de-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;1. Instalación de &lt;code&gt;RStudio&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;RStudio&lt;/code&gt; es gratuito y de código abierto. Haz clic &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/&#34;&gt;aquí&lt;/a&gt; para descargar la versión que corresponda a tu sitema operativo.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RStudio&lt;/code&gt; requiere la instalación de &lt;code&gt;R&lt;/code&gt; (versión 3.0.1 o superior). Para descargar &lt;code&gt;R&lt;/code&gt;, haz clic &lt;a href=&#34;https://cran.r-project.org/bin/windows/base/&#34;&gt;aquí&lt;/a&gt; si tu sistema operativo es Windows, y &lt;a href=&#34;https://cran.r-project.org/bin/macosx/&#34;&gt;aquí&lt;/a&gt; en caso de que sea macOS.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;entorno-de-trabajo-de-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;2. Entorno de trabajo de &lt;code&gt;RStudio&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Cuando abras RStudio, notarás una ventana con cuatro paneles principales, cada uno con algunas pestañas.&lt;/p&gt;
&lt;div id=&#34;consola&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.1. Consola&lt;/h2&gt;
&lt;p&gt;En el panel inferior izquierdo, encontraremos la consola de &lt;code&gt;RStudio&lt;/code&gt;. Es aquí donde podemos escribir las lineas de comando para interactuar con &lt;code&gt;R&lt;/code&gt;, y en donde nuestro código es interpretado. La consola es la única parte de &lt;code&gt;RStudio&lt;/code&gt; que en realidad es &lt;code&gt;R&lt;/code&gt;; todo lo demás son herramientas opcionales.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;script&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.2. Script&lt;/h2&gt;
&lt;p&gt;En el panel superior izquierdo, encontraremos el script, editor de texto con la extensión de archivo &lt;em&gt;.R&lt;/em&gt; que puede ser leido por &lt;code&gt;R&lt;/code&gt;. En el script escribiremos comandos que serán ejecutados en la consola. Además, en el script podemos agregar comentarios. Para ello, la(s) línea(s) de texto debe(n) estar precedidas por el el símbolo &lt;em&gt;#&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Para guardar el script:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;File &amp;gt; Save as&lt;/em&gt; y seleccionar la ruta donde se quiere guardar el archivo con la extensión &lt;em&gt;.R&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Hacer clic en el botón &lt;em&gt;Guardar&lt;/em&gt; que se encuentra en la parte izquierda de la cinta de opciones del script.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;ambiente-historial-conexiones-y-tutorial&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.3. Ambiente, Historial, Conexiones y Tutorial&lt;/h2&gt;
&lt;p&gt;En el panel superior derecho, encontraremos cuatro pestañas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Environment&lt;/strong&gt;: En el ambiente de trabajo se irán registrando el trabajo realizado (resultados, variables, gráficos, etc.) durante una determinada sesión. También tenemos la opción de cargar y guardar una sesión de trabajo, importar datos y limpiar los objetos de la sesión.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;History&lt;/strong&gt;: En el hisotrial se registran las instrucciones ejecutadas. Como opciones, podemos cargar y guardar el historial de la sesión, seleccionar una o más instrucciones y enviarlas a la consola o al script, además de poder limpiar el historial.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connections&lt;/strong&gt;: En conecciones, puedes conectar &lt;code&gt;RStudio&lt;/code&gt; a diferentes fuentes de datos. Por ejemplo ODBC, Spark, Oracle, SQLServer, entre otras.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tutorial&lt;/strong&gt;: Aquí encontraremos ayuda usando el paquete &lt;code&gt;learnr&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;archivos-visualizaciones-paquetes-y-ayuda&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.4. Archivos, Visualizaciones, Paquetes y Ayuda&lt;/h2&gt;
&lt;p&gt;En el panel inferior derecho, encontraremos cuatro pestañas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Files&lt;/strong&gt;: En la pestaña archivos podemos ver el historial de archivos trabajados.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plots&lt;/strong&gt;: Aquí se visualizan los gráficos que generamos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Packages&lt;/strong&gt;: Entrega un listado de los paquetes instalados en &lt;code&gt;R&lt;/code&gt; y los que han sido cargados en la sesión. A través de las opciones de esta pestaña podemos instalar nuevos paquetes o actualizar los existentes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt;: Permite acceder al CRAN (siempre que se cuente con conexión a Internet), página oficial del software que ofrece diferentes recursos para el programa: información general, de los paquetes instalados, de funciones de interés, entre otros.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Es importante señalar que podemos reorganizar los paneles en &lt;em&gt;Ver -&amp;gt; Paneles -&amp;gt; Diseño de panel&lt;/em&gt;. Además. podemos agregar y eliminar pestañas de los paneles en &lt;em&gt;Ver&lt;/em&gt; y seleccionando o deseleccionando las opciones de pestañas que se enumeran en la parte inferior.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;interactuando-con-rstudio&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;3. Interactuando con &lt;code&gt;RStudio&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Interactuar con &lt;code&gt;RStudio&lt;/code&gt; es simple. Básicamente, debemos escribir el código &lt;code&gt;R&lt;/code&gt; en la línea inferior de la consola y luego haga clic en &lt;em&gt;Enter&lt;/em&gt; para ejecutarlo. También podemos enviar código desde el &lt;em&gt;script&lt;/em&gt;, presionando &lt;em&gt;&amp;lt;Ctrl + R&amp;gt;&lt;/em&gt; (Windows) o &lt;em&gt;&amp;lt;Ctrl +Enter&amp;gt;&lt;/em&gt; (Mac).&lt;/p&gt;
&lt;p&gt;El código que escribimos se llama comando, porque dará la orden a nuestro computador que haga algo por nosotros. La línea en la que escribimos se llama línea de comando.&lt;/p&gt;
&lt;p&gt;Cuando escribimos un comando en el prompt &lt;em&gt;&amp;gt;&lt;/em&gt; y presionamos &lt;em&gt;Enter&lt;/em&gt;, o lo enviamos desde el &lt;em&gt;script&lt;/em&gt;, &lt;code&gt;R&lt;/code&gt; ejecutará el comando y nos mostará los resultados en la consola. Junto a nuestros resultados, aparecerá &lt;em&gt;[1]&lt;/em&gt;, informando que en esta línea comienza con el primer valor del resultado. Luego, RStudio muestra un nuevo &lt;em&gt;&amp;gt;&lt;/em&gt; para su próximo comando.&lt;/p&gt;
&lt;p&gt;Es importante tener en cuenta que:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cuando la consola muestra el prompt &lt;em&gt;&amp;gt;&lt;/em&gt;, significa que podemos dar nuevos comandos para ejecutar.&lt;/li&gt;
&lt;li&gt;Si escribimos un comando incompleto y presionamos &lt;em&gt;Enter&lt;/em&gt;, la consola mostrará un indicador &lt;em&gt;+&lt;/em&gt;, lo que significa que está esperando que escribamos el resto del comando.&lt;/li&gt;
&lt;li&gt;Si escribimos un comando que R no reconoce, R devolverá un mensaje de error. Esto no es para alarmarno. R simplemente nos está diciendo que no puede entender o hacer lo que le pedimos. El texto en rojo nos avisa y explica, los errores en la solicitud realizada.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;sintáxis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;5. Sintáxis&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;R&lt;/code&gt; es un lenguaje de programación. Tanto en &lt;code&gt;R&lt;/code&gt;, así como de la interfaz &lt;code&gt;RStudio&lt;/code&gt;, podemos interactuará con el programa mediante códigos. La sintaxis es un conjunto de códigos. Su uso en &lt;code&gt;R&lt;/code&gt; y &lt;code&gt;RStudio&lt;/code&gt; es bastante intuitivo y sigue un patrón lógico.&lt;/p&gt;
&lt;p&gt;De modo general, la sintáxis de &lt;code&gt;R&lt;/code&gt; sigue la siguiente estructura básica:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;comando(objeto)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En donde:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;comando&lt;/code&gt;: función a ejecutar a un objeto.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;objeto&lt;/code&gt;: estructura de datos que tiene algunos atributos y métodos que actúan sobre sus atributos.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Este ejemplo es una operación simple. Al aumentar la complejidad de los análisis la especificación de los comandos y los objetos irá requiriendo una mayor cantidad de información.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Datos en RStudio</title>
      <link>https://academic-demo.netlify.app/docencia/mmad109/sesion01_2/</link>
      <pubDate>Tue, 05 Oct 2021 21:13:14 -0500</pubDate>
      <guid>https://academic-demo.netlify.app/docencia/mmad109/sesion01_2/</guid>
      <description>
&lt;script src=&#34;https://academic-demo.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tipos-de-datos-en-r&#34;&gt;1. Tipos de datos en &lt;code&gt;R&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#numericos&#34;&gt;1.2. Numericos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cadena-de-texto&#34;&gt;1.2. Cadena de texto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#factor&#34;&gt;1.3. Factor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lógico&#34;&gt;1.4. Lógico&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#perdido-na-y-vacío-null&#34;&gt;1.5.Perdido (&lt;em&gt;NA&lt;/em&gt;) y Vacío (&lt;em&gt;NULL&lt;/em&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#verificando-el-tipo-de-dato&#34;&gt;1.6. Verificando el tipo de dato&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#operadores&#34;&gt;2. Operadores&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#aritméticos&#34;&gt;2.1. Aritméticos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#relacionales&#34;&gt;2.2. Relacionales&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lógicos&#34;&gt;2.3. Lógicos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#asignación&#34;&gt;2.4. Asignación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#concatenación&#34;&gt;2.5. Concatenación&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#estructura-de-datos-en-r&#34;&gt;3. Estructura de datos en R&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#vector&#34;&gt;Vector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-frames&#34;&gt;Data frames&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;tipos-de-datos-en-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;1. Tipos de datos en &lt;code&gt;R&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;En &lt;code&gt;R&lt;/code&gt; los datos pueden ser de diferentes tipos. Cada tipo tiene características particulares que lo distinguen de los demás. Entre otras cosas algunas operaciones sólo pueden realizarse con tipos de datos específicos. Los tipos de datos de uso más común en R son:&lt;/p&gt;
&lt;div id=&#34;numericos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.2. Numericos&lt;/h2&gt;
&lt;p&gt;Los tipos de datos numéricos son bastante sencillos. Estos son solo números, escritos como números enteros o decimales.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;5
## [1] 5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;25.3
## [1] 25.3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;cadena-de-texto&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.2. Cadena de texto&lt;/h2&gt;
&lt;p&gt;Secuencias de caracteres. Puede contener letras, números, espacios, signos de puntuación y símbolos especiales.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;quot;a&amp;quot;
## [1] &amp;quot;a&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;quot;Contaminacion&amp;quot;
## [1] &amp;quot;Contaminacion&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;factor&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.3. Factor&lt;/h2&gt;
&lt;p&gt;Este tipo de dato almacena variables categóricas o cualitativas. Los factores en &lt;code&gt;R&lt;/code&gt; son, por lo tanto, las variables categóricas que empleamos.&lt;/p&gt;
&lt;p&gt;Por definición, las variables categóricas cuentan con un número limitado de factores (o categorías). Por ejemplo, la variable sexo solo tendría dos factores: hombre o mujer. Pero estos factores o categorías también pueden ser numéricos, como el número de personas que asisten a cada clase de esta asignatura.&lt;/p&gt;
&lt;p&gt;Para crear un factor a partir de un vector, podemos usar la función &lt;code&gt;factor()&lt;/code&gt;. Por ejemplo, si generamos un vector con 10 elementos que indiquen el sexo de 10 personas, es importante convertirlo en factorial porque así R evalúa el número de factores que hay (2) en vez de tratarlos de modo independiente..&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sexo &amp;lt;- c(&amp;quot;hombre&amp;quot;, &amp;quot;mujer&amp;quot;, &amp;quot;mujer&amp;quot;, &amp;quot;mujer&amp;quot;, &amp;quot;hombre&amp;quot;, &amp;quot;mujer&amp;quot;, &amp;quot;mujer&amp;quot;, &amp;quot;mujer&amp;quot;, &amp;quot;hombre&amp;quot;, &amp;quot;mujer&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;factor(sexo)
##  [1] hombre mujer  mujer  mujer  hombre mujer  mujer  mujer  hombre mujer 
## Levels: hombre mujer&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;lógico&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.4. Lógico&lt;/h2&gt;
&lt;p&gt;Sólo tienen dos valores posibles: verdadero (&lt;em&gt;TRUE&lt;/em&gt;) y falso (&lt;em&gt;FALSE&lt;/em&gt;). Representan si una condición o estado se cumple, es verdadero, o no, es falso.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;perdido-na-y-vacío-null&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.5.Perdido (&lt;em&gt;NA&lt;/em&gt;) y Vacío (&lt;em&gt;NULL&lt;/em&gt;)&lt;/h2&gt;
&lt;p&gt;En R, usamos &lt;em&gt;NA&lt;/em&gt; para representar datos perdidos, mientras que &lt;em&gt;NULL&lt;/em&gt; representa la ausencia de datos.&lt;/p&gt;
&lt;p&gt;La diferencia entre las dos es que un dato &lt;em&gt;NULL&lt;/em&gt; aparece sólo cuando &lt;code&gt;R&lt;/code&gt; intenta recuperar un dato y no encuentra nada, mientras que &lt;em&gt;NA&lt;/em&gt; es usado para representar explícitamente datos perdidos, omitidos o que por alguna razón son faltantes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;verificando-el-tipo-de-dato&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1.6. Verificando el tipo de dato&lt;/h2&gt;
&lt;p&gt;Podemos verificar si un dato es de un tipo específico con la familia de funciones &lt;code&gt;is()&lt;/code&gt;. Estas funciones toman como argumento un dato, si este es del tipo que estamos verificando, nos devolverán &lt;em&gt;TRUE&lt;/em&gt; y en caso contrario devolverán &lt;em&gt;FALSE&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;xmiigoucwh&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#xmiigoucwh .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#xmiigoucwh .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#xmiigoucwh .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#xmiigoucwh .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#xmiigoucwh .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#xmiigoucwh .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#xmiigoucwh .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#xmiigoucwh .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#xmiigoucwh .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#xmiigoucwh .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#xmiigoucwh .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#xmiigoucwh .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#xmiigoucwh .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#xmiigoucwh .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#xmiigoucwh .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#xmiigoucwh .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#xmiigoucwh .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#xmiigoucwh .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#xmiigoucwh .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#xmiigoucwh .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#xmiigoucwh .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#xmiigoucwh .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#xmiigoucwh .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#xmiigoucwh .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#xmiigoucwh .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#xmiigoucwh .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#xmiigoucwh .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#xmiigoucwh .gt_left {
  text-align: left;
}

#xmiigoucwh .gt_center {
  text-align: center;
}

#xmiigoucwh .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#xmiigoucwh .gt_font_normal {
  font-weight: normal;
}

#xmiigoucwh .gt_font_bold {
  font-weight: bold;
}

#xmiigoucwh .gt_font_italic {
  font-style: italic;
}

#xmiigoucwh .gt_super {
  font-size: 65%;
}

#xmiigoucwh .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Función&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Tipo de dato&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.integer()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Entero&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.numeric&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Numérico&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.character()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Cadena de texto&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.factor()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Factor&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.logical()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Lógico&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.na()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;NA&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;is.null()&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;NULL&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;operadores&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;2. Operadores&lt;/h1&gt;
&lt;p&gt;Los operadores son símbolos que le indican a &lt;code&gt;R&lt;/code&gt; que debe realizar una determinada tarea.&lt;/p&gt;
&lt;p&gt;Existen operadores específicos para cada tipo de tarea. Los tipos de operadores principales, y específicos para cada tarea, son los siguientes:&lt;/p&gt;
&lt;div id=&#34;aritméticos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.1. Aritméticos&lt;/h2&gt;
&lt;p&gt;Este tipo de operador lo usarmeos para operaciones aritméticas.&lt;/p&gt;
&lt;div id=&#34;yhcsgdmwrv&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#yhcsgdmwrv .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#yhcsgdmwrv .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#yhcsgdmwrv .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#yhcsgdmwrv .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#yhcsgdmwrv .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#yhcsgdmwrv .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#yhcsgdmwrv .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#yhcsgdmwrv .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#yhcsgdmwrv .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#yhcsgdmwrv .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#yhcsgdmwrv .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#yhcsgdmwrv .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#yhcsgdmwrv .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#yhcsgdmwrv .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#yhcsgdmwrv .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#yhcsgdmwrv .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#yhcsgdmwrv .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#yhcsgdmwrv .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#yhcsgdmwrv .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#yhcsgdmwrv .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#yhcsgdmwrv .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#yhcsgdmwrv .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#yhcsgdmwrv .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#yhcsgdmwrv .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#yhcsgdmwrv .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#yhcsgdmwrv .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#yhcsgdmwrv .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#yhcsgdmwrv .gt_left {
  text-align: left;
}

#yhcsgdmwrv .gt_center {
  text-align: center;
}

#yhcsgdmwrv .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#yhcsgdmwrv .gt_font_normal {
  font-weight: normal;
}

#yhcsgdmwrv .gt_font_bold {
  font-weight: bold;
}

#yhcsgdmwrv .gt_font_italic {
  font-style: italic;
}

#yhcsgdmwrv .gt_super {
  font-size: 65%;
}

#yhcsgdmwrv .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operador&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operación&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Ejemplo&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Resultado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;+&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Suma&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;1 + 1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;-&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Resta&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 - 1&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;1&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;*&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Multiplicación&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 * 5&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;1O&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;/&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;División&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;10 / 3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;3.333333&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;^&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Potencia&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 ^ 3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;8&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;relacionales&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.2. Relacionales&lt;/h2&gt;
&lt;p&gt;Los operadores lógicos nos permitirán hacer comparaciones y siempre obtendremos como resultado &lt;em&gt;TRUE&lt;/em&gt; o &lt;em&gt;FALSE&lt;/em&gt; (verdadero o falso, respectivamente).&lt;/p&gt;
&lt;div id=&#34;fdomupbztw&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#fdomupbztw .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#fdomupbztw .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#fdomupbztw .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#fdomupbztw .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#fdomupbztw .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fdomupbztw .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#fdomupbztw .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#fdomupbztw .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#fdomupbztw .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#fdomupbztw .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#fdomupbztw .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#fdomupbztw .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#fdomupbztw .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#fdomupbztw .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#fdomupbztw .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#fdomupbztw .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#fdomupbztw .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#fdomupbztw .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#fdomupbztw .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#fdomupbztw .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#fdomupbztw .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#fdomupbztw .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#fdomupbztw .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#fdomupbztw .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#fdomupbztw .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#fdomupbztw .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#fdomupbztw .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#fdomupbztw .gt_left {
  text-align: left;
}

#fdomupbztw .gt_center {
  text-align: center;
}

#fdomupbztw .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#fdomupbztw .gt_font_normal {
  font-weight: normal;
}

#fdomupbztw .gt_font_bold {
  font-weight: bold;
}

#fdomupbztw .gt_font_italic {
  font-style: italic;
}

#fdomupbztw .gt_super {
  font-size: 65%;
}

#fdomupbztw .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operador&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operación&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Ejemplo&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Resultado&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Menor que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;1 &amp;lt; 2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;TRUE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt;=&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Menor o igual que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt; 2 &amp;lt;= 2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;TRUE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;gt;&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Mayor que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;3 &amp;gt; 2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;FALSE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;gt;=&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Mayor o igual que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;5 &amp;gt;= 6&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;FALSE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;==&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Exactamente igual que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 == 2&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;TRUE&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;!=&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;No es igual que&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;2 != 3&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;TRUE&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Al usar los operadores &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt; y &lt;code&gt;&amp;lt;=&lt;/code&gt; con cadenas de texto, su comportamiento será diferente.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;quot;dos&amp;quot; &amp;lt; &amp;quot;tres&amp;quot;
## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Este resultado se debe a que se ha hecho una comparación por orden alfabético. En este caso, la palabra “dos” tiene una posición anterior a “tres”, pues empieza con “d” y esta letra tiene una posición anterior a la “t” en el alfabeto. Por lo tanto, es verdadero que &lt;em&gt;dos&lt;/em&gt;sea menor que &lt;em&gt;tres&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;lógicos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.3. Lógicos&lt;/h2&gt;
&lt;p&gt;Este tipo de operador lo usarmeos para operaciones de álgebra Booleana, es decir, para describir relaciones lógicas, expresadas como verdadero (&lt;em&gt;TRUE&lt;/em&gt;) o falso (&lt;em&gt;FALSE&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Estos operadores pueden ser usados con estos con datos de tipo numérico, lógico y complejo. Al igual que con los operadores relacionales, los operadores lógicos siempre dan como resultado &lt;em&gt;TRUE&lt;/em&gt; o &lt;em&gt;FALSE&lt;/em&gt; (verdadero o falso, respectivamente).&lt;/p&gt;
&lt;div id=&#34;ngneevxesf&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#ngneevxesf .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#ngneevxesf .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ngneevxesf .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#ngneevxesf .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#ngneevxesf .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ngneevxesf .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#ngneevxesf .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#ngneevxesf .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#ngneevxesf .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#ngneevxesf .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#ngneevxesf .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#ngneevxesf .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#ngneevxesf .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#ngneevxesf .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#ngneevxesf .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#ngneevxesf .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#ngneevxesf .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#ngneevxesf .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ngneevxesf .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#ngneevxesf .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#ngneevxesf .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#ngneevxesf .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#ngneevxesf .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#ngneevxesf .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ngneevxesf .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#ngneevxesf .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#ngneevxesf .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#ngneevxesf .gt_left {
  text-align: left;
}

#ngneevxesf .gt_center {
  text-align: center;
}

#ngneevxesf .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#ngneevxesf .gt_font_normal {
  font-weight: normal;
}

#ngneevxesf .gt_font_bold {
  font-weight: bold;
}

#ngneevxesf .gt_font_italic {
  font-style: italic;
}

#ngneevxesf .gt_super {
  font-size: 65%;
}

#ngneevxesf .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operador&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Comparación&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;x | y&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;x o y son verdaderos&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;x &amp;amp; y&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;x e y son verdaderos&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;!x&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;x no es verdadero (negación)&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;isTRUE(x)&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;x es verdadero (afirmación)&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Los operadores &lt;code&gt;|&lt;/code&gt; e &lt;code&gt;&amp;amp;&lt;/code&gt; siguen estas reglas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; devuelve &lt;em&gt;TRUE&lt;/em&gt; si alguno de los datos es &lt;em&gt;TRUE&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; solo devuelve &lt;em&gt;TRUE&lt;/em&gt; si ambos datos es &lt;em&gt;TRUE&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt; solo devuelve &lt;em&gt;FALSE&lt;/em&gt; si ambos datos son &lt;em&gt;FALSE&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; devuelve &lt;em&gt;FALSE&lt;/em&gt; si alguno de los datos es &lt;em&gt;FALSE&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;asignación&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.4. Asignación&lt;/h2&gt;
&lt;p&gt;Nos permite asignar datos a objetos.&lt;/p&gt;
&lt;div id=&#34;xmxbfcboni&#34; style=&#34;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&#34;&gt;
&lt;style&gt;html {
  font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, Oxygen, Ubuntu, Cantarell, &#39;Helvetica Neue&#39;, &#39;Fira Sans&#39;, &#39;Droid Sans&#39;, Arial, sans-serif;
}

#xmxbfcboni .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 20px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#xmxbfcboni .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#xmxbfcboni .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#xmxbfcboni .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#xmxbfcboni .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#xmxbfcboni .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#xmxbfcboni .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#xmxbfcboni .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 25px;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#xmxbfcboni .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#xmxbfcboni .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#xmxbfcboni .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#xmxbfcboni .gt_group_heading {
  padding: 8px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
}

#xmxbfcboni .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#xmxbfcboni .gt_from_md &gt; :first-child {
  margin-top: 0;
}

#xmxbfcboni .gt_from_md &gt; :last-child {
  margin-bottom: 0;
}

#xmxbfcboni .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#xmxbfcboni .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 12px;
}

#xmxbfcboni .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#xmxbfcboni .gt_first_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
}

#xmxbfcboni .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#xmxbfcboni .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#xmxbfcboni .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#xmxbfcboni .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#xmxbfcboni .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#xmxbfcboni .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding: 4px;
}

#xmxbfcboni .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#xmxbfcboni .gt_sourcenote {
  font-size: 90%;
  padding: 4px;
}

#xmxbfcboni .gt_left {
  text-align: left;
}

#xmxbfcboni .gt_center {
  text-align: center;
}

#xmxbfcboni .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#xmxbfcboni .gt_font_normal {
  font-weight: normal;
}

#xmxbfcboni .gt_font_bold {
  font-weight: bold;
}

#xmxbfcboni .gt_font_italic {
  font-style: italic;
}

#xmxbfcboni .gt_super {
  font-size: 65%;
}

#xmxbfcboni .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 65%;
}
&lt;/style&gt;
&lt;table class=&#34;gt_table&#34;&gt;
  
  &lt;thead class=&#34;gt_col_headings&#34;&gt;
    &lt;tr&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operador&lt;/th&gt;
      &lt;th class=&#34;gt_col_heading gt_columns_bottom_border gt_center&#34; rowspan=&#34;1&#34; colspan=&#34;1&#34; style=&#34;border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;&#34;&gt;Operación&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody class=&#34;gt_table_body&#34;&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;&amp;lt;-&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Asigna un valor a un objeto&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td class=&#34;gt_row gt_center&#34;&gt;=&lt;/td&gt;
&lt;td class=&#34;gt_row gt_center&#34;&gt;Asigna un valor a un objeto&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
  
  
&lt;/table&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dos&amp;lt;-2

dos
## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;letra&amp;lt;-&amp;quot;a&amp;quot;

letra
## [1] &amp;quot;a&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Es importante tener en cuenta que:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Si asignamos un datos a un objeto al que ya habíamos asignado datos, nuestro objeto conserva los datos más recientes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Esta operación nos permite “guardar” el resultado de operaciones, de modo que podemos recuperarlos sin necesidad de realizar las operaciones otra vez (Revisar &lt;em&gt;Environment&lt;/em&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A lo largo del taller utilizaremos &lt;code&gt;&amp;lt;-&lt;/code&gt; por ser característico de R y fácil de reconocer visualmente.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;concatenación&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2.5. Concatenación&lt;/h2&gt;
&lt;p&gt;Este operador es una función (&lt;code&gt;c()&lt;/code&gt;) que nos permite combinar dos o más valores en un solo objeto.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dos_digitos&amp;lt;-c(15, 2)

dos_digitos
## [1] 15  2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;estructura-de-datos-en-r&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;3. Estructura de datos en R&lt;/h1&gt;
&lt;div id=&#34;vector&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Vector&lt;/h2&gt;
&lt;p&gt;Colección de uno o más datos del mismo tipo.&lt;/p&gt;
&lt;p&gt;Propiedades de los vectores:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tipo&lt;/strong&gt;: Un vector tiene el mismo tipo que los datos que contiene.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Largo&lt;/strong&gt;: Es el número de elementos que contiene un vector.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para crear un vector, podemos usar el operador de concatenación &lt;code&gt;c()&lt;/code&gt;. Llamamos esta función y le damos como argumento los elementos que deseamos combinar en un vector, separados por comas.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;c(15, 2, 3.3, 5, 8)
## [1] 15.0  2.0  3.3  5.0  8.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_numerico&amp;lt;-c(15, 2, 3.3, 5, 8)

vector_numerico
## [1] 15.0  2.0  3.3  5.0  8.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si deseamos agregar un elemento a un vector ya existente, podemos hacerlo combinando nuestro vector original con los elementos nuevos y asignando el resultado a nuestro vector original.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_numerico&amp;lt;-c(15, 2, 3.3, 5, 8)

vector_numerico &amp;lt;-c(vector_numerico,1200)

vector_numerico
## [1]   15.0    2.0    3.3    5.0    8.0 1200.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;También podemos crear vectores que son combinaciones de vectores.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_numerico_1&amp;lt;-c(15, 2, 3.3)

vector_numerico_2&amp;lt;-c(25, 9, 0.6)

vector_numerico &amp;lt;-c (vector_numerico_1,vector_numerico_2)

vector_numerico
## [1] 15.0  2.0  3.3 25.0  9.0  0.6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos crear vectores de &lt;strong&gt;secuencias numéricas&lt;/strong&gt; usando &lt;code&gt;:&lt;/code&gt;. De un lado de los dos puntos escribimos el número de inicio de la secuencia y del otro el final.&lt;/p&gt;
&lt;p&gt;Las secuencias creadas son consecutivas con incrementos o decrementos de 1. Estas secuencias pueden empezar con cualquier número, incluso si este es negativo o tiene cifras decimales.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;1:50
##  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
## [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vector_secuencia&amp;lt;- 1:50

vector_secuencia
##  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
## [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Otra opción para generar vectores es la función &lt;code&gt;rep(x,times)&lt;/code&gt;, la cual repite los elementos en &lt;code&gt;x&lt;/code&gt;un número determinado de veces (&lt;code&gt;times&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(1:5,2)
##  [1] 1 2 3 4 5 1 2 3 4 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora, si usamos el argumento &lt;code&gt;each&lt;/code&gt;, primero se replicará el elemento y luego se repetirá el número de veces definida por nosotros.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(1:5, each=2)
##  [1] 1 1 2 2 3 3 4 4 5 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El argumento &lt;code&gt;len&lt;/code&gt; sirve para definir el número de elementos que debe contener el resultado.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(1:5,each=2, len =4)
## [1] 1 1 2 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El argumento &lt;code&gt;len&lt;/code&gt; sirve para definir el número de veces que queremos repetir el vector de interés.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(1:5,each=2, times =3)
##  [1] 1 1 2 2 3 3 4 4 5 5 1 1 2 2 3 3 4 4 5 5 1 1 2 2 3 3 4 4 5 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora, exploremos generemos repeticiones pero esta vez con vectores de cadenas de texto.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(LETTERS[1:5],4)
##  [1] &amp;quot;A&amp;quot; &amp;quot;B&amp;quot; &amp;quot;C&amp;quot; &amp;quot;D&amp;quot; &amp;quot;E&amp;quot; &amp;quot;A&amp;quot; &amp;quot;B&amp;quot; &amp;quot;C&amp;quot; &amp;quot;D&amp;quot; &amp;quot;E&amp;quot; &amp;quot;A&amp;quot; &amp;quot;B&amp;quot; &amp;quot;C&amp;quot; &amp;quot;D&amp;quot; &amp;quot;E&amp;quot; &amp;quot;A&amp;quot; &amp;quot;B&amp;quot; &amp;quot;C&amp;quot; &amp;quot;D&amp;quot;
## [20] &amp;quot;E&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(&amp;quot;Santiago&amp;quot;,4)
## [1] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(c(&amp;quot;Santiago&amp;quot;,&amp;quot;Valdivia&amp;quot;),4)
## [1] &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot;
## [8] &amp;quot;Valdivia&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(c(&amp;quot;Santiago&amp;quot;,&amp;quot;Valdivia&amp;quot;),4,each=2)
##  [1] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot;
##  [7] &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot;
## [13] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rep(c(&amp;quot;Santiago&amp;quot;,&amp;quot;Valdivia&amp;quot;),each=5)
##  [1] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot;
##  [7] &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Ciudad&amp;lt;-c(&amp;quot;Santiago&amp;quot;,&amp;quot;Valdivia&amp;quot;)
Ciudad&amp;lt;-rep(Ciudad,each=5)
Ciudad
##  [1] &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Santiago&amp;quot; &amp;quot;Valdivia&amp;quot;
##  [7] &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot; &amp;quot;Valdivia&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-frames&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data frames&lt;/h2&gt;
&lt;p&gt;Es una lista de vectores de la misma longitud. Los data frame permiten tipos de datos mixtos (por ejemplo, numérico, lógico, caracter). Esto les permite almacenar diferentes tipos de objetos (variables), lo cual es muy útil en el análisis estadístico.&lt;/p&gt;
&lt;p&gt;Primero, generemos tres diferentes objetos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Ciudad&amp;lt;-rep(c(&amp;quot;Santiago&amp;quot;,&amp;quot;Valdivia&amp;quot;),each=5)
Sitio_Muestreo&amp;lt;-rep(c(1:5), times=2)
PM2.5&amp;lt;-c(73,75,79,84,80, 67, 65, 70, 61,65)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora, utilizaremos la función &lt;code&gt;data.frame&lt;/code&gt; para generar nuestro data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data&amp;lt;-data.frame(Ciudad,Sitio_Muestreo, PM2.5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data
##      Ciudad Sitio_Muestreo PM2.5
## 1  Santiago              1    73
## 2  Santiago              2    75
## 3  Santiago              3    79
## 4  Santiago              4    84
## 5  Santiago              5    80
## 6  Valdivia              1    67
## 7  Valdivia              2    65
## 8  Valdivia              3    70
## 9  Valdivia              4    61
## 10 Valdivia              5    65&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R Markdown</title>
      <link>https://academic-demo.netlify.app/docencia/mmad109/sesion03_1/</link>
      <pubDate>Tue, 05 Oct 2021 21:13:14 -0500</pubDate>
      <guid>https://academic-demo.netlify.app/docencia/mmad109/sesion03_1/</guid>
      <description>
&lt;script src=&#34;https://academic-demo.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#r-markdown&#34;&gt;R Markdown&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#como-funciona&#34;&gt;1. ¿Como funciona?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#requisitos&#34;&gt;2. Requisitos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#estructura-del-archivo-.rmd.&#34;&gt;3. Estructura del archivo &lt;code&gt;.Rmd&lt;/code&gt;.&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#encabezado-yaml&#34;&gt;Encabezado YAML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#texto&#34;&gt;&lt;strong&gt;Texto&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#trozos-chunk-de-código&#34;&gt;Trozos (&lt;em&gt;chunk&lt;/em&gt;) de código&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#syntaxis&#34;&gt;4. Syntaxis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;Rmarkdown nos permite generar informes a partir de R. Utiliza un lenguaje llamado Markdown para enriquecer el informe final. Este permite incluir texto, comandos de R, imágenes y gráficos a un documento. Pero lo más importante es que permite que se reproduzca el análisis realizado y si se incorporan nuevos datos, los resultados se actualizarán. Para mas detalles visitar &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;como-funciona&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1. ¿Como funciona?&lt;/h2&gt;
&lt;p&gt;Debemos comenzar abriendo un archivo R Markdown, un archivo de texto sin formato, que tiene la extensión &lt;code&gt;.Rmd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En el menú debemos hacer click en:
&lt;strong&gt;File –&amp;gt; New File –&amp;gt; R Markdown…&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Esto abrirá un fichero que nos permitirá elegir el formato de salida de nuestro informe:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;página web que se podrá ver con un navegador,&lt;/li&gt;
&lt;li&gt;documento PDF o&lt;/li&gt;
&lt;li&gt;documento Word.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Importante&lt;/em&gt;: Si deseamos generar una documento PDF, necesitaremos instalar LaTeX. Para los usuarios de Markdown R que no hayan instalado LaTeX anteriormente, se recomienda instalarTinyTeX (&lt;a href=&#34;https://yihui.name/tinytex/&#34; class=&#34;uri&#34;&gt;https://yihui.name/tinytex/&lt;/a&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;requisitos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2. Requisitos&lt;/h2&gt;
&lt;p&gt;Al momento de comenzar un proyecto, debemos tener instalado los siguientes programas:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;La versión mas reciente de R &lt;a href=&#34;https://www.r-project.org&#34; class=&#34;uri&#34;&gt;https://www.r-project.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;RStudio &lt;a href=&#34;https://rstudio.com&#34; class=&#34;uri&#34;&gt;https://rstudio.com&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Instalar los paquetes &lt;code&gt;knitr&lt;/code&gt; y &lt;code&gt;rmarkdown&lt;/code&gt;. Podemos instalar cada paquete desde el CRAN con:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;rmarkdown&amp;quot;)
library(rmarkdown)
#install.packages(&amp;quot;knitr&amp;quot;)
library(knitr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El paquete &lt;code&gt;Knitr&lt;/code&gt; integra en un sólo archivo markdown el texto ingresado en formato RMarkdown y los resultados de la ejecución de los códigos construidos mediante R.&lt;/p&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;Conocimientos basicos en markdown (para eso está este tutorial, no?).&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;estructura-del-archivo-.rmd.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;3. Estructura del archivo &lt;code&gt;.Rmd&lt;/code&gt;.&lt;/h2&gt;
&lt;p&gt;Cuando se utiliza el botón de &lt;code&gt;Knit&lt;/code&gt; se generan documentos los cuales contienen sintaxis en markdown con codigos de R en &lt;em&gt;chunks&lt;/em&gt;.&lt;/p&gt;
&lt;div id=&#34;encabezado-yaml&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Encabezado YAML&lt;/h3&gt;
&lt;p&gt;El encabezado YAML (en inglés &lt;em&gt;yet another markup language&lt;/em&gt;) determina los parámetros generales de formato para el documento a generar. Es importante tener presente que este encabezado define el formato del archivo resultante, más no su contenido.&lt;/p&gt;
&lt;p&gt;El encabezado comienza y termina con tres rayas (- - -). Veamos el siguiente ejemplo que incluye algunos parámetros (existen muchos más) que definirán el formato del documento:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Título del documento&amp;quot;
author: &amp;quot;Quien desarrolla el documento&amp;quot;
date: &amp;quot;Fecha en la cual desarrollamos el documento&amp;quot;
output:
  html_document: default
---&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En este ejemplo hemos especificado que el documento se generará en formato &lt;em&gt;HTML&lt;/em&gt;. Otras opciones de &lt;em&gt;output&lt;/em&gt; son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;output: html_document&lt;/strong&gt;… archivo html (página web)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;output: pdf_document&lt;/strong&gt;… archivo pdf&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;output: word_document&lt;/strong&gt;… Microsoft Word .docx&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;output: beamer_presentation&lt;/strong&gt;… presentación beamer (pdf)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;output: ioslides_presentation&lt;/strong&gt;… presentación ioslides (html)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;texto&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;strong&gt;Texto&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;El documento lo podemos escribir en forma de texto plano (el contenido que deseas escribir). Para ello podemos usar la sintaxis de markdown para describir el formato del texto en el documento final. Dedicaremos una sección independiente para revisar la sintaxis de RMarkdown.&lt;/p&gt;
&lt;p&gt;Podemos agregar imágenes a un informe de R Markdown a partir de imágenes disponibles en nuestro directorio de trabajo. Para ello utilziaremos la siguiente sintaxis:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![AQUÍ PODEMOS INCORPORAR TEXTO ](respeto.jpg)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Un aspecto importante es que la separación de párrafos se realiza saltando una línea en blanco.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Me salto
una

línea&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;trozos-chunk-de-código&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Trozos (&lt;em&gt;chunk&lt;/em&gt;) de código&lt;/h3&gt;
&lt;p&gt;Los trozos (&lt;em&gt;chunk&lt;/em&gt;) de código en un documento de R Markdown contendrán tu código R. Los trozos de código
está delimitado por tres apóstrofes seguidos por un r entre corchetes curvos &lt;code&gt;{r}&lt;/code&gt;, y su cierre por otros tres apóstrofes (&lt;code&gt;```&lt;/code&gt;). Eso delimita lo que se ejecutará como código.&lt;/p&gt;
&lt;p&gt;Un &lt;em&gt;chunk&lt;/em&gt; básico se ve de la siguiente forma:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;
# ``` {r } 

#Aquí va el código

# ```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veamos un ejemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# sumemos
x &amp;lt;- 1+12

y &amp;lt;- 90

# generemos un objeto que contenga la resta de &amp;quot;x&amp;quot; con &amp;quot;y&amp;quot; 
respuesta &amp;lt;- x - y

# revisemos el resultado de nuestro objeto llamado respuesta
respuesta
## [1] -77&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora, insertemos un nuevo &lt;em&gt;chunk&lt;/em&gt;. Para ello podemos escribirlo o podemos utilizar una combinación desde el teclado para generar un &lt;em&gt;chunk&lt;/em&gt; por defecto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Ctrl + Alt + I&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OS X&lt;/strong&gt;: Cmd + Option + I&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#```{r }

#```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;RMarkdown también nos permite configurar qué es lo que queremos mostrar en nuestro documento final. Por defecto, mostramos el código y resultado. Por ejemplo, al abrir el siguiente código de nuestra sintaxis de Markdown con las siguintes opciones &lt;code&gt;{r, eval = FALSE, echo = FALSE,  message = FALSE, warning= FALSE}&lt;/code&gt; les estamos indicando lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eval = FALSE&lt;/code&gt;: queremos mostrar el código, pero que no se ejecute (sólo queremos enseñar cómo se hace algo).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo = FALSE&lt;/code&gt;: queremos mostrar el resultado pero no el código (no queremos enseñar cómo se hace algo).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;message = FALSE&lt;/code&gt;: No muestra los mensajes de información que se generan al correr el código.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;warning = FALSE&lt;/code&gt;: No muestra los mensajes de advertencia que se generan al correr el código.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;syntaxis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;4. Syntaxis&lt;/h2&gt;
&lt;p&gt;La syntaxis de RMarkdown es muy secilla y nos permite añadir estilo, imágenes, enlaces y expresiones mátematicas a nuestro documento de texto. Las palabras o frases deben comenzar y terminar con los siguientes simbolos:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Syntaxis&lt;/th&gt;
&lt;th&gt;Resultado&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;* *&lt;/td&gt;
&lt;td&gt;&lt;em&gt;cursiva&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;_ _&lt;/td&gt;
&lt;td&gt;&lt;em&gt;cursiva&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;** **&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;negrita&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;__ __&lt;/td&gt;
&lt;td&gt;_&lt;strong&gt;negrita&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;superindice ^ ^&lt;/td&gt;
&lt;td&gt;superindice &lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;tachado ~~ ~~&lt;/td&gt;
&lt;td&gt;&lt;del&gt;tachado&lt;/del&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;enlace [ ]&lt;/td&gt;
&lt;td&gt;[&lt;a href=&#34;https://pacortes.github.io/&#34; class=&#34;uri&#34;&gt;https://pacortes.github.io/&lt;/a&gt;]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;También podemos generar listas no numeradas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2
&lt;ul&gt;
&lt;li&gt;Item 2a&lt;/li&gt;
&lt;li&gt;Item 2b&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;y listas numeradas:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;li&gt;Item 2
&lt;ul&gt;
&lt;li&gt;Item 3a&lt;/li&gt;
&lt;li&gt;Item 3b&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En algunas ocasiones, estaremos interesados en establecer secciones dentro de nuestro documento. Para ello podemos diferenciar mmúltiples encabezados, según el tamaño del texto.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Nivel&lt;/th&gt;
&lt;th&gt;Sintaxis&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Encabezado 1&lt;/td&gt;
&lt;td&gt;&lt;em&gt;# texto&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Encabezado 2 |&lt;em&gt;## texto&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encabezado 3 |&lt;em&gt;### texto&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encabezado 4 |&lt;em&gt;#### texto&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encabezado 5 |&lt;em&gt;##### texto&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encabezado 6 |&lt;em&gt;###### texto&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Primer informe con RMarkdown</title>
      <link>https://academic-demo.netlify.app/docencia/mmad109/sesion03_2/</link>
      <pubDate>Tue, 05 Oct 2021 21:13:14 -0500</pubDate>
      <guid>https://academic-demo.netlify.app/docencia/mmad109/sesion03_2/</guid>
      <description>
&lt;script src=&#34;https://academic-demo.netlify.app/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#objetivo-del-informe&#34;&gt;Objetivo del informe&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#paso-1.-exploremos-nuestros-datos&#34;&gt;Paso 1. Exploremos nuestros datos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#paso-2.-visualicemos-nuestros-datos&#34;&gt;Paso 2. Visualicemos nuestros datos&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#gráfico-de-cajas&#34;&gt;Gráfico de cajas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gráfico-de-dispersión&#34;&gt;Gráfico de dispersión&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#paso-3.-analicemos-nuestros-datos&#34;&gt;Paso 3. Analicemos nuestros datos&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#correlación-lineal&#34;&gt;Correlación Lineal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coeficiente-de-correlación&#34;&gt;Coeficiente de Correlación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#prueba-de-hipótesis&#34;&gt;Prueba de Hipótesis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#función-cor.test&#34;&gt;Función &lt;code&gt;cor.test()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ejemplo&#34;&gt;Ejemplo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;objetivo-del-informe&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Objetivo del informe&lt;/h1&gt;
&lt;p&gt;Generar un informe automatizado en el cuál se explorarán y visualizarán los los datos de la base de datos de emisiones de PM2.5 y PM10 para tres regiones de nuestro país. Para ello utilizaremos los conocimientos que hemos aprendido sobre las librerías &lt;code&gt;dplyr&lt;/code&gt;, &lt;code&gt;ggplot2&lt;/code&gt; y &lt;code&gt;rmarkdown&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;paso-1.-exploremos-nuestros-datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Paso 1. Exploremos nuestros datos&lt;/h2&gt;
&lt;p&gt;Utilizaremos el verbo &lt;code&gt;glimpse()&lt;/code&gt; de la librería &lt;em&gt;dplyr&lt;/em&gt; para explorar la estructura de la base de datos. Recordemos que asignamos el nombre &lt;em&gt;data&lt;/em&gt; a nuestra base de datos&lt;/p&gt;
&lt;p&gt;Primero debemos asegurarnos de llamar a la librería &lt;code&gt;dplyr&lt;/code&gt;. También explicitaremos el argumento &lt;code&gt;warning = FALSE&lt;/code&gt; para evitar que aparezcan mensajes o advertencias en el archivo final.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;dplyr&amp;quot;)
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora, importemos nuestros datos:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(readxl)
data&amp;lt;-read_excel(&amp;quot;data.xlsx&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finalmente, exploremos la estructura de nuestros datos:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(data)
## Rows: 71
## Columns: 4
## $ Region &amp;lt;chr&amp;gt; &amp;quot;Metropolitana&amp;quot;, &amp;quot;Metropolitana&amp;quot;, &amp;quot;Metropolitana&amp;quot;, &amp;quot;Metropolita…
## $ Comuna &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, …
## $ PM25   &amp;lt;dbl&amp;gt; 13, 15, 14, 13, 12, 16, 14, 10, 5, 10, 11, 11, 12, 11, 11, 14, …
## $ PM10   &amp;lt;dbl&amp;gt; 54, 55, 57, 52, 53, 66, 58, 33, 24, 42, 47, 53, 58, 51, 55, 51,…&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;paso-2.-visualicemos-nuestros-datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Paso 2. Visualicemos nuestros datos&lt;/h2&gt;
&lt;div id=&#34;gráfico-de-cajas&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Gráfico de cajas&lt;/h3&gt;
&lt;p&gt;Objetivo: Comparar las emisiones de PM2.5 entre las tres regiones en nuestra base de datos.&lt;/p&gt;
&lt;p&gt;Ahora, debemos asegurarnos de llamar a la librería &lt;code&gt;ggplot2&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#install.packages(&amp;quot;ggplot2&amp;quot;)
library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data$Region&amp;lt;-factor(data$Region, levels=c(&amp;quot;Valparaiso&amp;quot;, &amp;quot;Metropolitana&amp;quot;,&amp;quot;LosRios&amp;quot;))

ggplot(data,mapping=aes(x=Region,y=PM25))+
  geom_boxplot(fill=&amp;quot;#BC3C29FF&amp;quot;,alpha=0.7)+
  geom_jitter(width = 0.2, alpha=0.7)+
  labs(x=&amp;quot;Region&amp;quot;,
       y= &amp;quot;PM 2.5 (μg/m3)&amp;quot;,
       title = &amp;quot;PM 2.5 en tres regiones de Chile&amp;quot;)+
  scale_y_continuous(breaks=c(0,10,20) ,limits = c(0,20))+
  theme(axis.text =element_text(size=14),
        axis.title=element_text(size=20),
        plot.title=element_text(size=20))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://academic-demo.netlify.app/docencia/MMAD109/Sesion03_2_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;gráfico-de-dispersión&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Gráfico de dispersión&lt;/h3&gt;
&lt;p&gt;Generemos un gráfico de dispersión con la función &lt;code&gt;geom_point ()&lt;/code&gt; para las variables PM2.5 y PM10 en la región Metropolitana.&lt;/p&gt;
&lt;p&gt;Primero, debemos asegurarnos de trabajar solo con los datos que se nos solicitan. Para ello, utilzaremos las funciones &lt;code&gt;select ()&lt;/code&gt; and &lt;code&gt;filter ()&lt;/code&gt; de la librería &lt;em&gt;dplyr&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_ejemplo&amp;lt;-data %&amp;gt;% 
  filter (Region == &amp;quot;Metropolitana&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Recordemos que &lt;code&gt;ggplot2&lt;/code&gt; divide un gráfico en tres partes fundamentales:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;los datos.&lt;/li&gt;
&lt;li&gt;la estética.&lt;/li&gt;
&lt;li&gt;la geometría.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data_ejemplo, mapping=aes(x=PM25 , y =PM10))+
  geom_point(size=2.5, col=&amp;quot;#BC3C29FF&amp;quot;)+
  labs(x= &amp;quot;PM 2.5 (μg/m3)&amp;quot;,
       y= &amp;quot;PM 10 (μg/m3)&amp;quot;,
       title = &amp;quot;Fig.2. Relación PM 2.5 y PM10 en la RM&amp;quot;)+
  theme(axis.text =element_text(size=14),
        axis.title=element_text(size=20),
        plot.title=element_text(size=20))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://academic-demo.netlify.app/docencia/MMAD109/Sesion03_2_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;paso-3.-analicemos-nuestros-datos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Paso 3. Analicemos nuestros datos&lt;/h2&gt;
&lt;div id=&#34;correlación-lineal&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Correlación Lineal&lt;/h3&gt;
&lt;p&gt;La correlación es un método estadístico que permite evaluar la relación lineal (cambian conjuntamente a una tasa fija) entre dos variables. En particular, el interés es cuantificar la intensidad de de la variación conjunta entre las dos variables.&lt;/p&gt;
&lt;p&gt;Los posibles escenarios de esta relación son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Correlación positiva&lt;/strong&gt;: El aumento de una de las variables viene acompañado del aumento de la otra.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Correlación negativa&lt;/strong&gt;: El aumento de una variable viene acompañado de una disminución en la otra.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;No correlación&lt;/strong&gt;: Ambas variables no muestren ningún tipo de relación entre si.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El hecho de que dos variables estén correlacionadas no quiere decir que una sea la responsable de la otra. Dicho de otro modo, a existencia de correlación entre variables no implica causalidad.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;coeficiente-de-correlación&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Coeficiente de Correlación&lt;/h3&gt;
&lt;p&gt;El coeficiente de correlación es la medida específica que cuantifica la intensidad de la relación lineal entre dos variables en un análisis de correlación. Este coeficiente se simboliza con la letra &lt;strong&gt;r&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;El coeficiente de correlación &lt;strong&gt;r&lt;/strong&gt; es un valor sin unidades entre -1 y 1, en donde:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Cuanto más se aproxima a cero, más débil es la relación lineal.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Los valores de positivos indican una correlación positiva.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Los valores de negativos indican una correlación negativa.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Los valores 1 y -1 representan una correlación “perfecta” positiva y negativa, respectivamente.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Si r = 0 nos dice que no hay correlación lineal. Sin embargo, podría exisitr relación de otro tipo.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Un coeficiente de correlación es el &lt;strong&gt;Coeficiente de Correlación de Pearson&lt;/strong&gt;, que se usa para evaluar la relación lineal entre dos variables aleatorias cuantitativas.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prueba-de-hipótesis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Prueba de Hipótesis&lt;/h3&gt;
&lt;p&gt;Una vez estimado el coeficiente de correlación, debemos realizar una prueba o contraste de hipótesis de la “significancia del coeficiente de correlación”.&lt;/p&gt;
&lt;p&gt;La prueba de hipótesis nos permite decidir si el valor del coeficiente de correlación es “cercano a cero” o “significativamente diferente de cero”.&lt;/p&gt;
&lt;p&gt;Si la prueba concluye que el coeficiente de correlación es significativamente diferente de cero, decimos que el coeficiente de correlación es “significativo”.&lt;/p&gt;
&lt;p&gt;En simple, la prueba de hipótesis contrasta una hipótesis nula y una alternativa, las cuales son dos enunciados mutuamente excluyentes. Una prueba de hipótesis utiliza los datos para determinar si se puede rechazar la hipótesis nula.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;hipótesis nula&lt;/strong&gt;: las variables x e y no están correlacionadas.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;hipótesis alternativa&lt;/strong&gt;: las variables x e y están correlacionadas.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La prueba, o contraste, de hipótesis funciona de la siguiente forma:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Establecer hipótesis de investigación en base a nuestro interés como investigadores. Por ejemplo, Existe una relación entre las variables X e Y.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expresar hipótesis de investigación como una hipótesis estadística.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Hipótesis nula: No existe correlación entre las variables X e Y.&lt;/li&gt;
&lt;li&gt;Hipótesis alternativa: Existe correlación entre las variables X e Y.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Elegir la prueba (test) estadística de acuerdo al diseño experimental y el tipo de datos. La cifra que resulta de la prueba a partir de los datos se conoce como el estadístico del test.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Correlación de Pearson para evaluar la relacióne entre X e Y&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Elegir nivel de significncia (α) de la prueba (límite para rechazar hipótesis nula). En general, se acepta α = 0,01 ó 0,05 de probabilidad de equivocarnos al rechazar la hipótesis nula.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Calcular el valor de babilidad (p). Probabilidad de obtener los resultados observados u otros más extremos si la hipótesis nula es verdadera.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Comparar el nivel de significancia con el valor de p.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Si p &amp;lt; α, se rechaza hipotetesis nula. Existe correlación significativa entre las variables.&lt;/li&gt;
&lt;li&gt;Si p &amp;gt; α, no se rechaza hipotetesis nula. No existe suficiente evidencia para establecer que existe correlación significativa entre las variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;función-cor.test&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Función &lt;code&gt;cor.test()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;La función &lt;code&gt;cor&lt;/code&gt; permite calcular el coeficiente de correlación de Pearson (y otros) para dos variables cuantitativas.&lt;/p&gt;
&lt;p&gt;La estructura de la función es la siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cor.test(x, y, method = c(&#34;pearson&#34;, &#34;kendall&#34;, &#34;spearman&#34;))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En donde:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;x, y&lt;/code&gt;: son las variables a evaluar, deben tener la misma longitud.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;`method tipo de coeficiente de correlación a calcular, por defecto es pearson, otros valores posibles son kendall y spearman.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La interpretación se hace examinando el valor de p (p-value) y el coeficiente de correlación (cor).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ejemplo&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Ejemplo&lt;/h3&gt;
&lt;p&gt;Evaluemos si existe relación entre las emisiones de PM2.5 Y PM10 enel nivel de las variables PM2.5 y PM10 en la Región Metropolitana.&lt;/p&gt;
&lt;p&gt;Recordemos que previamente, generamos el objeto data_ejemplo para trabajar exclusivamente con los datos de la región Metropolitana.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor.test(data_ejemplo$PM25,data_ejemplo$PM10)
## 
##  Pearson&amp;#39;s product-moment correlation
## 
## data:  data_ejemplo$PM25 and data_ejemplo$PM10
## t = 12.08, df = 50, p-value &amp;lt; 2.2e-16
## alternative hypothesis: true correlation is not equal to 0
## 95 percent confidence interval:
##  0.7719094 0.9193830
## sample estimates:
##       cor 
## 0.8630124&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Del resultado, debemos destacar la siguiente información:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;cor&lt;/code&gt;: coeficiente correlación de Person.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;p-value&lt;/code&gt;: valor de probabilidad. Si es menor al nivel de significancia (α = 0.05), podemos rechazar la hipótesis nula.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En nuestro ejemplo, podemos establecer que existe una relación significativa positiva y fuerte entre las emisiones de PM2.5 y PM10 en la Región Metropolitana (R= 0.86, P &amp;lt; 0.05).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://academic-demo.netlify.app/docencia/MMAD109/Sesion03_2_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
